study 목차
Step1 - 사용자 요청을 메인 Thread가 처리하도록 한다.
Step2 - 사용자 요청이 들어올 때마다 Thread를 새로 생성해서 사용자 요청을 처리 하도록 한다.
Step3 - Thread Pool을 적용해 안정적인 서비스가 가능하도록 한다

HTTP
• 서버와 클라이언트가 웹에서 데이터를 주고받기 위한 프로토콜(규약)
• 참고
• HTTP/1.1 , HTTP/2는 TCP 기반 위에서 동작 - tcp 위에서 동작한다는 것은 3way hand hake를 통해 연결을 맺는다는 의미
• HTTP/3는 UDP 기반 위에서 동작 - 3way hand hake로 연결을 맵을 필요가 없다.

HTTP 특징
• 클라이언트-서버 모델
• 무상태 프로토콜(Stateless)
- 서버가 client 상태를 유지하지 않는다는 말이다.
• 서버가 클라이언트 상태를 유지하지 않음
• 해결책 : Keep-Alive 속성 사용 : 일정 시간동안 연결 상태를 유지
> 하지만 keep alive는 성능 하락의 원인이 되기도 한다. (thread 부족 현상)

 비 연결성(Connectionless)
• 서버가 클라이언트 요청에 대해 응답을 마치면 맺었던 연결을 끊어 버림
• 해결책 : 쿠키(클라이언트에 정보 저장), 세션(서버에 정보 저장), JWT

왜 http는 무상태성과 비연결성의 성질을 가지고 있는걸까?
http는 기본적으로 불특정 상대와 연결되도록 설계 된 프로토콜.
만약 상태성을 유지하게 되면 제한 된 연결만을 유지할 수있을 것이다.
무상태성과 비연결성으로 인해서 더 많은 자원과 연결을 할 수있다.